:mod:`ethereum.vm.instructions`
===============================

.. py:module:: ethereum.vm.instructions

Ethereum Virtual Machine (EVM) Instructions
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. contents:: Table of Contents
    :backlinks: none
    :local:

Introduction
------------

Implementations of the instructions understood by the EVM.


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::
   :nosignatures:

   ethereum.vm.instructions.stop
   ethereum.vm.instructions.add
   ethereum.vm.instructions.sub
   ethereum.vm.instructions.mul
   ethereum.vm.instructions.div
   ethereum.vm.instructions.sdiv
   ethereum.vm.instructions.mod
   ethereum.vm.instructions.smod
   ethereum.vm.instructions.addmod
   ethereum.vm.instructions.mulmod
   ethereum.vm.instructions.exp
   ethereum.vm.instructions.signextend
   ethereum.vm.instructions.sstore
   ethereum.vm.instructions.push_n



Attributes
~~~~~~~~~~

.. autoapisummary::

   ethereum.vm.instructions.push1
   ethereum.vm.instructions.push2
   ethereum.vm.instructions.push3
   ethereum.vm.instructions.push4
   ethereum.vm.instructions.push5
   ethereum.vm.instructions.push6
   ethereum.vm.instructions.push7
   ethereum.vm.instructions.push8
   ethereum.vm.instructions.push9
   ethereum.vm.instructions.push10
   ethereum.vm.instructions.push11
   ethereum.vm.instructions.push12
   ethereum.vm.instructions.push13
   ethereum.vm.instructions.push14
   ethereum.vm.instructions.push15
   ethereum.vm.instructions.push16
   ethereum.vm.instructions.push17
   ethereum.vm.instructions.push18
   ethereum.vm.instructions.push19
   ethereum.vm.instructions.push20
   ethereum.vm.instructions.push21
   ethereum.vm.instructions.push22
   ethereum.vm.instructions.push23
   ethereum.vm.instructions.push24
   ethereum.vm.instructions.push25
   ethereum.vm.instructions.push26
   ethereum.vm.instructions.push27
   ethereum.vm.instructions.push28
   ethereum.vm.instructions.push29
   ethereum.vm.instructions.push30
   ethereum.vm.instructions.push31
   ethereum.vm.instructions.push32


Module Details
---------------

stop
~~~~


.. function:: stop(evm: ethereum.vm.Evm) -> None
   :noindexentry:

   Stop further execution of EVM code.

   :param evm: The current EVM frame.




.. undocinclude:: /../src/ethereum/vm/instructions.py
   :language: python
   :lines: 34-43

add
~~~


.. function:: add(evm: ethereum.vm.Evm) -> None
   :noindexentry:

   Adds the top two elements of the stack together, and pushes the result back
   on the stack.

   :param evm: The current EVM frame.

   :raises StackUnderflowError: If `len(stack)` is less than `2`.
   :raises OutOfGasError: If `evm.gas_left` is less than `GAS_VERY_LOW`.




.. undocinclude:: /../src/ethereum/vm/instructions.py
   :language: python
   :lines: 51-74

sub
~~~


.. function:: sub(evm: ethereum.vm.Evm) -> None
   :noindexentry:

   Subtracts the top two elements of the stack, and pushes the result back
   on the stack.

   :param evm: The current EVM frame.

   :raises StackUnderflowError: If `len(stack)` is less than `2`.
   :raises OutOfGasError: If `evm.gas_left` is less than `GAS_VERY_LOW`.




.. undocinclude:: /../src/ethereum/vm/instructions.py
   :language: python
   :lines: 77-100

mul
~~~


.. function:: mul(evm: ethereum.vm.Evm) -> None
   :noindexentry:

   Multiply the top two elements of the stack, and pushes the result back
   on the stack.

   :param evm: The current EVM frame.

   :raises StackUnderflowError: If `len(stack)` is less than `2`.
   :raises OutOfGasError: If `evm.gas_left` is less than `GAS_LOW`.




.. undocinclude:: /../src/ethereum/vm/instructions.py
   :language: python
   :lines: 103-126

div
~~~


.. function:: div(evm: ethereum.vm.Evm) -> None
   :noindexentry:

   Integer division of the top two elements of the stack. Pushes the result
   back on the stack.

   :param evm: The current EVM frame.

   :raises StackUnderflowError: If `len(stack)` is less than `2`.
   :raises OutOfGasError: If `evm.gas_left` is less than `GAS_LOW`.




.. undocinclude:: /../src/ethereum/vm/instructions.py
   :language: python
   :lines: 129-155

sdiv
~~~~


.. function:: sdiv(evm: ethereum.vm.Evm) -> None
   :noindexentry:

   Signed integer division of the top two elements of the stack. Pushes the
   result back on the stack.

   :param evm: The current EVM frame.

   :raises StackUnderflowError: If `len(stack)` is less than `2`.
   :raises OutOfGasError: If `evm.gas_left` is less than `GAS_LOW`.




.. undocinclude:: /../src/ethereum/vm/instructions.py
   :language: python
   :lines: 158-188

mod
~~~


.. function:: mod(evm: ethereum.vm.Evm) -> None
   :noindexentry:

   Modulo remainder of the top two elements of the stack. Pushes the result
   back on the stack.

   :param evm: The current EVM frame.

   :raises StackUnderflowError: If `len(stack)` is less than `2`.
   :raises OutOfGasError: If `evm.gas_left` is less than `GAS_LOW`.




.. undocinclude:: /../src/ethereum/vm/instructions.py
   :language: python
   :lines: 191-217

smod
~~~~


.. function:: smod(evm: ethereum.vm.Evm) -> None
   :noindexentry:

   Signed modulo remainder of the top two elements of the stack. Pushes the
   result back on the stack.

   :param evm: The current EVM frame.

   :raises StackUnderflowError: If `len(stack)` is less than `2`.
   :raises OutOfGasError: If `evm.gas_left` is less than `GAS_LOW`.




.. undocinclude:: /../src/ethereum/vm/instructions.py
   :language: python
   :lines: 220-247

addmod
~~~~~~


.. function:: addmod(evm: ethereum.vm.Evm) -> None
   :noindexentry:

   Modulo addition of the top 2 elements with the 3rd element. Pushes the
   result back on the stack.

   :param evm: The current EVM frame.

   :raises StackUnderflowError: If `len(stack)` is less than `3`.
   :raises OutOfGasError: If `evm.gas_left` is less than `GAS_MID`.




.. undocinclude:: /../src/ethereum/vm/instructions.py
   :language: python
   :lines: 250-278

mulmod
~~~~~~


.. function:: mulmod(evm: ethereum.vm.Evm) -> None
   :noindexentry:

   Modulo multiplication of the top 2 elements with the 3rd element. Pushes
   the result back on the stack.

   :param evm: The current EVM frame.

   :raises StackUnderflowError: If `len(stack)` is less than `3`.
   :raises OutOfGasError: If `evm.gas_left` is less than `GAS_MID`.




.. undocinclude:: /../src/ethereum/vm/instructions.py
   :language: python
   :lines: 281-309

exp
~~~


.. function:: exp(evm: ethereum.vm.Evm) -> None
   :noindexentry:

   Exponential operation of the top 2 elements. Pushes the result back on
   the stack.

   :param evm: The current EVM frame.

   :raises StackUnderflowError: If `len(stack)` is less than `2`.
   :raises OutOfGasError: If `evm.gas_left` is less than `GAS_MID`.




.. undocinclude:: /../src/ethereum/vm/instructions.py
   :language: python
   :lines: 312-343

signextend
~~~~~~~~~~


.. function:: signextend(evm: ethereum.vm.Evm) -> None
   :noindexentry:

   Sign extend operation. In other words, extend a signed number which
   fits in N bytes to 32 bytes.

   :param evm: The current EVM frame.

   :raises StackUnderflowError: If `len(stack)` is less than `2`.
   :raises OutOfGasError: If `evm.gas_left` is less than `GAS_LOW`.




.. undocinclude:: /../src/ethereum/vm/instructions.py
   :language: python
   :lines: 346-388

sstore
~~~~~~


.. function:: sstore(evm: ethereum.vm.Evm) -> None
   :noindexentry:

   Stores a value at a certain key in the current context's storage.

   :param evm: The current EVM frame.

   :raises StackUnderflowError: If `len(stack)` is less than `2`.
   :raises OutOfGasError: If `evm.gas_left` is less than `20000`.




.. undocinclude:: /../src/ethereum/vm/instructions.py
   :language: python
   :lines: 391-430

push_n
~~~~~~


.. function:: push_n(evm: ethereum.vm.Evm, num_bytes: int) -> None
   :noindexentry:

   Pushes a N-byte immediate onto the stack.

   :param evm: The current EVM frame.
   :param num_bytes: The number of immediate bytes to be read from the code and pushed to
                     the stack.
   :type num_bytes: `int`

   :raises StackOverflowError: If `len(stack)` is equals `1024`.
   :raises OutOfGasError: If `evm.gas_left` is less than `GAS_VERY_LOW`.




.. undocinclude:: /../src/ethereum/vm/instructions.py
   :language: python
   :lines: 433-461

push1
~~~~~

.. data:: push1
   

   


push2
~~~~~

.. data:: push2
   

   


push3
~~~~~

.. data:: push3
   

   


push4
~~~~~

.. data:: push4
   

   


push5
~~~~~

.. data:: push5
   

   


push6
~~~~~

.. data:: push6
   

   


push7
~~~~~

.. data:: push7
   

   


push8
~~~~~

.. data:: push8
   

   


push9
~~~~~

.. data:: push9
   

   


push10
~~~~~~

.. data:: push10
   

   


push11
~~~~~~

.. data:: push11
   

   


push12
~~~~~~

.. data:: push12
   

   


push13
~~~~~~

.. data:: push13
   

   


push14
~~~~~~

.. data:: push14
   

   


push15
~~~~~~

.. data:: push15
   

   


push16
~~~~~~

.. data:: push16
   

   


push17
~~~~~~

.. data:: push17
   

   


push18
~~~~~~

.. data:: push18
   

   


push19
~~~~~~

.. data:: push19
   

   


push20
~~~~~~

.. data:: push20
   

   


push21
~~~~~~

.. data:: push21
   

   


push22
~~~~~~

.. data:: push22
   

   


push23
~~~~~~

.. data:: push23
   

   


push24
~~~~~~

.. data:: push24
   

   


push25
~~~~~~

.. data:: push25
   

   


push26
~~~~~~

.. data:: push26
   

   


push27
~~~~~~

.. data:: push27
   

   


push28
~~~~~~

.. data:: push28
   

   


push29
~~~~~~

.. data:: push29
   

   


push30
~~~~~~

.. data:: push30
   

   


push31
~~~~~~

.. data:: push31
   

   


push32
~~~~~~

.. data:: push32
   

   

